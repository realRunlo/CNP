- name: Gather metrics
  hosts: localhost
  vars_files:
    - configs.yml
  tasks:
    - name: Turn on instance
      gcp_compute_instance:
        name: "{{instances[0].gce_zone}}-instance"
        project: "{{instances[0].gce_project}}"
        auth_kind: serviceaccount
        service_account_contents: "{{service_account_contents}}"
        zone: "{{instances[0].gce_zone}}"
        status: "RUNNING"

    - name: get info on an instance
      gcp_compute_instance_info:
        filters:
          - name = "{{instances[0].gce_zone}}-instance"
        project: "{{instances[0].gce_project}}"
        auth_kind: serviceaccount
        service_account_contents: "{{service_account_contents}}"
        zone: "{{instances[0].gce_zone}}"
      register: result

    - name: Wait for SSH to become available
      wait_for:
        host: "{{ result.resources[0].networkInterfaces[0].accessConfigs[0].natIP }}"
        port: 22
        timeout: 300
      become: yes

    - name: Add GCP instance to inventory
      add_host:
        name: "{{instances[0].gce_zone}}-instance"
        ansible_host: "{{ result.resources[0].networkInterfaces[0].accessConfigs[0].natIP }}"
        ansible_user: runlo
        ansible_ssh_private_key_file: ~/.ssh/id_rsa
        ansible_connection: ssh
        ansible_python_interpreter: /usr/bin/python3

    - name: Init iperf remote server 
      become: yes
      ansible.builtin.shell:
        cmd: sudo iperf -s -p 5201
      async: 100
      poll: 0
      delegate_to: "{{instances[0].gce_zone}}-instance"

    - name: Iperf - Bandwidth test
      become: yes
      ansible.builtin.shell:
        cmd: sudo iperf -c {{result.resources[0].networkInterfaces[0].accessConfigs[0].natIP}} -p 5201  > results/temp/bandwidth.txt
      delegate_to: localhost

    - name: Init iperf3 remote server 
      become: yes
      ansible.builtin.shell:
        cmd: sudo iperf3 -s -p 5202
      async: 100
      poll: 0
      delegate_to: "{{instances[0].gce_zone}}-instance"
    
    - name: Iperf3 - udp test
      become: yes
      ansible.builtin.shell:
        cmd: sudo iperf3 -c {{result.resources[0].networkInterfaces[0].accessConfigs[0].natIP}} -u -p 5202 > results/temp/udp.txt
      delegate_to: localhost

    - name: Iperf3 - tcp test
      become: yes
      ansible.builtin.shell:
        cmd: sudo iperf3 -c {{result.resources[0].networkInterfaces[0].accessConfigs[0].natIP}} -p 5202 > results/temp/tcp.txt
      delegate_to: localhost

    
    - name: Start NTP server
      become: yes
      ansible.builtin.shell:
        cmd: sudo service ntp start
      delegate_to: "{{instances[0].gce_zone}}-instance"

    - name: Add NTP server host
      ansible.builtin.lineinfile:
        path: /etc/hosts
        line: "{{result.resources[0].networkInterfaces[0].accessConfigs[0].natIP}}  NTP-server-host"
      delegate_to: localhost
   
    - name: Syncronize local with remote clock
      become: yes
      ansible.builtin.shell:
        cmd: sudo ntpdate NTP-server-host 
      delegate_to: localhost

    - name: Init OWD server
      become: yes
      ansible.builtin.shell:
        cmd: sudo python main.py > results/temp/server.txt
      delegate_to: "{{instances[0].gce_zone}}-instance"

    - name: OWD test
      become: yes
      ansible.builtin.shell:
        cmd: sudo python3 main.py > results/temp/client.txt
      delegate_to: localhost

    - name: Turn off instance
      gcp_compute_instance:
        name: "{{instances[0].gce_zone}}-instance"
        project: "{{instances[0].gce_project}}"
        auth_kind: serviceaccount
        service_account_contents: "{{service_account_contents}}"
        zone: "{{instances[0].gce_zone}}"
        status: "TERMINATED"

    - name: Append new line into csv file
      become: yes
      ansible.builtin.shell:
       cmd: python3 results/build_csv.py {{instances[0].gce_zone}}
      delegate_to: localhost

    - name: Delete temp content
      become: yes
      ansible.builtin.shell: |
        rm -r results/temp
        mkdir results/temp
      delegate_to: localhost